{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/Login.jsx","components/Admin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","className","to","src","alt","isLogged","localStorage","getItem","onClick","onLogout","removeItem","push","socket","io","connect","Home","useState","animals","setAnimals","useEffect","fetchData","a","Axios","get","result","console","log","data","on","map","item","image_url","name","type_name","sex","age","vet_name","animal_id","Login","username","setUsername","password","setPassword","error","setError","onSubmitHandler","event","preventDefault","post","user_name","status","onLogin","token","setItem","onSubmit","type","defaultValue","id","required","placeholder","onChange","target","value","Admin","success","setSuccess","open","setOpen","openV","setOpenV","selectedName","setSelectedName","selectedID","setSelectedID","types","setTypes","vets","setVets","setName","setType","typeN","setTypeN","setSex","setAge","vet","setVet","vetN","setVetN","imgUrl","setImgUrl","vetV","setVetV","vetVN","setVetVN","errorForm","setErrorForm","uppy","Uppy","meta","restrictions","maxNumberOfFiles","autoProceed","use","Tus","endpoint","url","onUrlChange","successful","uploadURL","onSubmitHandle","authorizationToken","type_id","vet_id","headers","authorization","newArr","emit","onOpenVet","animal_name","onChangeVet","put","objIndex","findIndex","obj","onDeleteHandle","delete","filter","response","restypes","resvets","Root","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","JSON","parse","selected","disabled","hidden","stringify","locale","strings","dropHereOr","browse","App","setIsLogged","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAuCeA,EAnCA,SAACC,GAEZ,IAAMC,EAAUC,cAQhB,OACI,iCACI,qBAAKC,UAAU,iEAAf,SACI,sBAAKA,UAAU,uDAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,sBAAKD,UAAU,kFAAf,UACI,qBAAKA,UAAU,0BAA0BE,IAAI,gEAAgEC,IAAI,cACjH,sBAAMH,UAAU,uCAAhB,+BAIJH,EAAMO,UAAYC,aAAaC,QAAQ,SACnC,wBAAQN,UAAU,uIAAuIO,QAlB1J,WACnBV,EAAMW,WACNH,aAAaI,WAAW,SACxBX,EAAQY,KAAK,MAeO,oBAEA,cAAC,IAAD,CAAMT,GAAG,SAAT,SACI,wBAAQD,UAAU,wIAAlB,mC,kDCxB1BW,EAASC,IAAGC,QAAQ,yBAiDXC,EA/CF,WAET,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,qBAAU,WACN,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAI,wCADjB,OACRC,EADQ,OAEdC,QAAQC,IAAIF,EAAOG,KAAKH,QACxBN,EAAWM,EAAOG,KAAKH,QAHT,2CAAH,qDAKfJ,MACF,CAACF,IAEHC,qBAAU,WACNP,EAAOgB,GAAG,iBAAiB,SAACD,GAC1BT,EAAWS,QAEZ,IAGD,sBAAK1B,UAAU,mBAAf,UACI,oBAAIA,UAAU,sDAAd,6CACA,mBAAGA,UAAU,+CAAb,+CACA,qBAAKA,UAAU,0FAAf,SAEQgB,EAAQY,KAAI,SAAAC,GAAI,OACZ,qBAAK7B,UAAU,8JAAf,SACI,gCACI,qBAAKA,UAAU,+BAA+BE,IAAK2B,EAAKC,UAAW3B,IAAI,KACvE,sBAAKH,UAAU,yCAAf,kBAA8D6B,EAAKE,KAAnE,OACA,sBAAK/B,UAAU,2BAAf,UACI,oBAAGA,UAAU,qBAAb,mBAAyC6B,EAAKG,aAC9C,oBAAGhC,UAAU,gBAAb,kBAAmC6B,EAAKI,OACxC,oBAAGjC,UAAU,qBAAb,kBAAwC6B,EAAKK,IAAML,EAAKK,IAAM,gBAElE,qBAAKlC,UAAU,OAAf,SACI,oBAAGA,UAAU,kBAAb,0BAA6C6B,EAAKM,kBAVoHN,EAAKO,oBCmEhMC,EAhGD,SAACxC,GAEX,MAAgCkB,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KACA,EAAgCxB,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAA0B1B,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAEM7C,EAAUC,cAUV6C,EAAe,uCAAG,WAAMC,GAAN,eAAAzB,EAAA,6DACpByB,EAAMC,iBACNH,EAAS,IAFW,SAGCtB,IAAM0B,KACvB,uCACA,CACIC,UAAWV,EACXE,SAAUA,IAPE,OAUC,OAPfjB,EAHc,QAUV0B,OACNN,EAAS,uCAET9C,EAAMqD,UACN1B,QAAQC,IAAIF,EAAOG,KAAKyB,OACxB9C,aAAa+C,QAAQ,QAAS7B,EAAOG,KAAKyB,OAC1CrD,EAAQY,KAAK,WAhBG,2CAAH,sDAoBrB,OACI,qBAAKV,UAAU,8DAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,gCACI,qBACAA,UAAU,sBACVE,IAAI,gEACJC,IAAI,aAEJ,oBAAIH,UAAU,yDAAd,4BAEJ,uBAAMA,UAAU,iBAAiBqD,SAAUT,EAA3C,UACI,uBAAOU,KAAK,SAASvB,KAAK,WAAWwB,aAAa,SAClD,sBAAKvD,UAAU,uBAAf,UACI,gCACI,uBAAOA,UAAU,UAAjB,sBAGA,uBACAwD,GAAG,WACHzB,KAAK,WACLuB,KAAK,WACLG,UAAQ,EACRzD,UAAU,8MACV0D,YAAY,sBACZC,SArDC,SAACd,GACtBN,EAAYM,EAAMe,OAAOC,aAuDT,sBAAK7D,UAAU,OAAf,UACI,uBAAOA,UAAU,UAAjB,sBAGA,uBACAwD,GAAG,WACHzB,KAAK,WACLuB,KAAK,WACLG,UAAQ,EACRzD,UAAU,8MACV0D,YAAY,sBACZC,SA/DC,SAACd,GACtBJ,EAAYI,EAAMe,OAAOC,gBAkEb,8BACI,sBAAM7D,UAAU,uBAAhB,SAAwC0C,MAE5C,8BACI,wBACIY,KAAK,SACLtD,UAAU,sOAFd,8B,uEC1ElBW,G,cAASC,IAAGC,QAAQ,0BAkeXiD,EA/dD,WACV,MAA8B/C,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KACA,EAA0BjD,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAwB5B,oBAAS,GAAjC,mBAAOkD,EAAP,KAAaC,EAAb,KACA,EAA0BnD,oBAAS,GAAnC,mBAAOoD,EAAP,KAAcC,EAAd,KAEA,EAAwCrD,mBAAS,IAAjD,mBAAOsD,EAAP,KAAqBC,EAArB,KACA,EAAoCvD,mBAAS,MAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KAEA,EAA0BzD,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcC,EAAd,KACA,EAAwB3D,mBAAS,IAAjC,mBAAO4D,EAAP,KAAaC,EAAb,KAEA,EAAwB7D,mBAAS,IAAjC,mBAAOgB,EAAP,KAAa8C,EAAb,KACA,GAAwB9D,mBAAS,MAAjC,qBAAOuC,GAAP,MAAawB,GAAb,MACA,GAA0B/D,mBAAS,QAAnC,qBAAOgE,GAAP,MAAcC,GAAd,MACA,GAAsBjE,mBAAS,IAA/B,qBAAOkB,GAAP,MAAYgD,GAAZ,MACA,GAAsBlE,mBAAS,MAA/B,qBAAOmB,GAAP,MAAYgD,GAAZ,MACA,GAAsBnE,mBAAS,MAA/B,qBAAOoE,GAAP,MAAYC,GAAZ,MACA,GAAwBrE,mBAAS,IAAjC,qBAAOsE,GAAP,MAAaC,GAAb,MACA,GAA4BvE,mBAAS,IAArC,qBAAOwE,GAAP,MAAeC,GAAf,MAEA,GAAwBzE,mBAAS,MAAjC,qBAAO0E,GAAP,MAAaC,GAAb,MACA,GAA0B3E,mBAAS,IAAnC,qBAAO4E,GAAP,MAAcC,GAAd,MAEA,GAAiC7E,mBAAS,IAA1C,qBAAM8E,GAAN,MAAiBC,GAAjB,MAEMhG,GAAUC,cAqCVgG,GAAO,IAAIC,IAAK,CAClBC,KAAM,CAAE3C,KAAM,UACd4C,aAAc,CAAEC,iBAAkB,GAClCC,aAAa,IAGbL,GAAKM,IAAIC,IAAK,CAAEC,SAAU,oCAE1BR,GAAKpE,GAAG,YAAY,SAACJ,IAbL,SAACiF,GACjBhF,QAAQC,IAAI+E,GACZhB,GAAUgB,GAaVC,CADYlF,EAAOmF,WAAW,GAAGC,cAIrC,IAAMC,GAAc,uCAAG,8BAAAxF,EAAA,yDACnB0E,GAAa,IACT/D,GAASuB,IAASrB,IAASkD,GAFZ,gBAGfW,GAAa,6CAHE,0BAIRP,GAJQ,gBAKfO,GAAa,0BALE,8BAOTe,EAAqB,UAAYxG,aAAaC,QAAQ,SAC5DkB,QAAQC,IAAIoF,GARG,oBAUUxF,IAAM0B,KACvB,yCACA,CACI+D,QAASxD,GACTvB,KAAMA,EACND,UAAWyD,GACXtD,IAAKA,GACLC,IAAKA,GACL6E,OAAQ5B,IAEZ,CACI6B,QAAS,CACLC,cAAeJ,KAtBhB,QA0BU,MA1BV,OA0BD5D,SACNe,EAAW,6BACLkD,EAFe,sBAEHlG,GAFG,CAEM,CACvB8F,QAASxD,GACTvB,KAAMA,EACND,UAAWyD,GACXtD,IAAKA,GACLC,IAAKA,GACL6E,OAAQ5B,GACRnD,UAAW+C,GACX5C,SAAUkD,MAEdpE,EAAWiG,GACXhD,GAAQ,GACRvD,EAAOwG,KAAK,gBAAiBD,IAxCtB,mDA2CXvE,EAAS,8CACTuB,GAAQ,GA5CG,2DAAH,qDAiDdkD,GAAS,uCAAG,WAAMhF,EAAWiF,GAAjB,SAAAjG,EAAA,sDACdoD,EAAcpC,GACdkC,EAAgB+C,GAChB7F,QAAQC,IAAIW,GACZZ,QAAQC,IAAI4F,GACZjD,GAAS,GALK,2CAAH,wDAQTkD,GAAW,uCAAG,WAAMlF,GAAN,mBAAAhB,EAAA,6DAChB4C,EAAW,IACXrB,EAAS,IACHkE,EAAqB,UAAYxG,aAAaC,QAAQ,SAH5C,kBAKSe,IAAMkG,IACvB,uCAAyCnF,EACzC,CACI2E,OAAQtB,IAEZ,CACIuB,QAAS,CACLC,cAAeJ,KAZf,OAgBS,MAhBT,OAgBF5D,SACNe,EAAW,6BAEPwD,GADAN,EAASlG,GACSyG,WAAW,SAAAC,GAAG,OAAIA,EAAItF,YAAcA,KAC1D8E,EAAOM,GAAUT,OAAStB,GAC1ByB,EAAOM,GAAUrF,SAAWwD,GAC5B1E,EAAWiG,GACX9C,GAAS,GACTzD,EAAOwG,KAAK,gBAAiBD,IAxBrB,kDA2BZvE,EAAS,8CACTyB,GAAS,GA5BG,0DAAH,sDAgCXuD,GAAc,uCAAG,WAAMvF,GAAN,iBAAAhB,EAAA,6DACnB4C,EAAW,IACXrB,EAAS,IACHkE,EAAqB,UAAYxG,aAAaC,QAAQ,SAHzC,kBAKMe,IAAMuG,OACvB,0CAA4CxF,EAC5C,CACI4E,QAAS,CACLC,cAAeJ,KATZ,OAaM,MAbN,OAaL5D,SACNe,EAAW,+BACPkD,EAASlG,EAAQ6G,QAAO,SAAAhG,GAAI,OAAIA,EAAKO,YAAcA,KACvDnB,EAAWiG,GACXvG,EAAOwG,KAAK,gBAAiBD,IAjBlB,kDAoBfvE,EAAS,KAAMmF,SAASpG,MApBT,0DAAH,sDA4CpB,OApBAR,qBAAU,WACNM,QAAQC,IAAIpB,aAAaC,QAAQ,UAC7BD,aAAaC,QAAQ,WACrBkB,QAAQC,IAAI,gBACZ3B,GAAQY,KAAK,MAEjB,IAAMS,EAAS,uCAAG,gCAAAC,EAAA,sEACOC,IAAMC,IAAI,wCADjB,cACRC,EADQ,OAEdC,QAAQC,IAAIF,EAAOG,KAAKH,QACxBN,EAAWM,EAAOG,KAAKH,QAHT,SAISF,IAAMC,IAAI,sCAJnB,cAIRyG,EAJQ,OAKdvG,QAAQC,IAAIsG,EAASrG,KAAKH,QAC1BmD,EAASqD,EAASrG,KAAKH,QANT,UAOQF,IAAMC,IAAI,qCAPlB,QAOR0G,EAPQ,OAQdxG,QAAQC,IAAIuG,EAAQtG,KAAKH,QACzBqD,EAAQoD,EAAQtG,KAAKH,QATP,4CAAH,qDAWfJ,MACF,CAACF,EAAYnB,KAGX,sBAAKE,UAAU,mBAAf,UACI,oBAAIA,UAAU,sDAAd,4BACA,wBAAQA,UAAU,2IAA2IO,QAAS,WAAO2D,GAAQ,IAArL,wBAEA,cAAC,IAAW+D,KAAZ,CAAiBC,KAAMjE,EAAMkE,GAAIC,WAAjC,SACI,cAAC,IAAD,CAAQD,GAAG,MAAMnI,UAAU,qCAAqCqI,QAASnE,EAAzE,SACI,sBAAKlE,UAAU,yFAAf,UACA,cAAC,IAAWsI,MAAZ,CACIH,GAAIC,WACJG,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAPZ,SASI,cAAC,IAAOC,QAAR,CAAgB7I,UAAU,iEAE9B,sBAAMA,UAAU,qDAAqD,cAAY,OAAjF,oBAGA,cAAC,IAAWsI,MAAZ,CACIH,GAAIC,WACJG,MAAM,wBACNC,UAAU,uDACVC,QAAQ,yCACRC,MAAM,uBACNC,UAAU,yCACVC,QAAQ,uDAPZ,SASI,sBAAK5I,UAAU,2JAAf,UACA,qBAAKA,UAAU,yCAAf,SACI,qBAAKA,UAAU,GAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,cAAC,IAAO8I,MAAR,CAAcX,GAAG,KAAKnI,UAAU,4DAAhC,2BAGA,qBAAKA,UAAU,OAAf,SACA,uBAAMA,UAAU,iBAAhB,UACI,sBAAKA,UAAU,uBAAf,UACI,8BACI,uBACAwD,GAAG,OACHzB,KAAK,OACLuB,KAAK,OACLG,UAAQ,EACRzD,UAAU,8MACV0D,YAAY,cACZC,SAtOvB,SAACd,GAClBgC,EAAQhC,EAAMe,OAAOC,YAwOe,qBAAK7D,UAAU,OAAf,SACI,yBACAwD,GAAG,OACHzB,KAAK,OACLuB,KAAK,OACLG,UAAQ,EACRzD,UAAU,8MACV2D,SA5OvB,SAACd,GAClBrB,QAAQC,IAAIsH,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IAC3CsB,GAAQiE,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IACvCwB,GAAS+D,KAAKC,MAAMnG,EAAMe,OAAOC,OAAO9B,OAmOA,UAQI,wBAAQkH,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAhC,iCAEI1E,EAAM7C,KAAI,SAACC,GAAD,OACN,wBAAQgC,MAAOkF,KAAKK,UAAU,CAAC5F,GAAG3B,EAAKiF,QAAS/E,KAAKF,EAAKG,YAA1D,SAA2FH,EAAKG,WAApBH,EAAKiF,iBAKjG,qBAAK9G,UAAU,OAAf,SACI,yBACAwD,GAAG,MACHzB,KAAK,MACLuB,KAAK,OACLG,UAAQ,EACRzD,UAAU,8MACV2D,SAvPxB,SAACd,GACjBoC,GAAOpC,EAAMe,OAAOC,QAgPoB,UAQI,wBAAQoF,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAhC,gCACA,0CACA,iDAIR,qBAAKnJ,UAAU,OAAf,SACI,uBACAwD,GAAG,MACHzB,KAAK,MACLuB,KAAK,SACLtD,UAAU,8MACV0D,YAAY,4BACZC,SAlQxB,SAACd,GACjBqC,GAAOrC,EAAMe,OAAOC,YAoQgB,qBAAK7D,UAAU,OAAf,SACI,yBACAwD,GAAG,MACHzB,KAAK,MACLuB,KAAK,OACLG,UAAQ,EACRzD,UAAU,8MACV2D,SAxQxB,SAACd,GACjBrB,QAAQC,IAAIsH,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IAC3C4B,GAAO2D,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IACtC8B,GAAQyD,KAAKC,MAAMnG,EAAMe,OAAOC,OAAO9B,OA+PC,UAQI,wBAAQkH,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAhC,2BAEIxE,EAAK/C,KAAI,SAACC,GAAD,OACL,wBAAQgC,MAAOkF,KAAKK,UAAU,CAAC5F,GAAG3B,EAAKkF,OAAQhF,KAAKF,EAAKM,WAAzD,SAAwFN,EAAKM,UAAnBN,EAAKkF,mBAMnG,gCACI,qBAAK/G,UAAU,oCAAf,0CACCuF,IAAW,qBAAKvF,UAAU,kBAAkBE,IAAKqF,GAAQpF,IAAI,mBAC9D,cAAC,IAAD,CACI4F,KAAMA,GACNsD,OAAQ,CACRC,QAAS,CACLC,WAAY,yBACZC,OAAQ,gBAKpB,8BACI,sBAAMxJ,UAAU,uBAAhB,SAAwC6F,mBAO5D,sBAAK7F,UAAU,2DAAf,UACI,wBACAsD,KAAK,SACLtD,UAAU,gNACVO,QAASqG,GAHT,wBAOA,wBACAtD,KAAK,SACLtD,UAAU,2OACVO,QAAS,kBAAM2D,GAAQ,IAHvB,mCAchB,8BACI,sBAAMlE,UAAU,yBAAhB,SAA0C+D,MAE9C,8BACI,sBAAM/D,UAAU,uBAAhB,SAAwC0C,MAE5C,qBAAK1C,UAAU,0FAAf,SAEQgB,EAAQY,KAAI,SAAAC,GAAI,OACZ,qBAAK7B,UAAU,8JAAf,SACI,gCACI,qBAAKA,UAAU,+BAA+BE,IAAK2B,EAAKC,UAAW3B,IAAI,KACvE,sBAAKH,UAAU,yCAAf,kBAA8D6B,EAAKE,KAAnE,OACA,sBAAK/B,UAAU,2BAAf,UACI,oBAAGA,UAAU,qBAAb,mBAAyC6B,EAAKG,aAC9C,oBAAGhC,UAAU,gBAAb,kBAAmC6B,EAAKI,OACxC,oBAAGjC,UAAU,qBAAb,kBAAwC6B,EAAKK,IAAML,EAAKK,IAAM,gBAElE,qBAAKlC,UAAU,OAAf,SACI,oBAAGA,UAAU,kBAAb,0BAA6C6B,EAAKM,cAEtD,gCACI,wBAAQnC,UAAU,kJAAkJO,QAAS,WAAO6G,GAAUvF,EAAKO,UAAWP,EAAKE,OAAnN,wBACA,wBAAQ/B,UAAU,8IAA8IO,QAAS,WAAOoH,GAAe9F,EAAKO,YAApM,kCAdsKP,EAAKO,gBAqBnM,cAAC,IAAW6F,KAAZ,CAAiBC,KAAM/D,EAAOgE,GAAIC,WAAlC,SACI,cAAC,IAAD,CAAQD,GAAG,MAAMnI,UAAU,qCAAqCqI,QAASjE,EAAzE,SACI,sBAAKpE,UAAU,yFAAf,UACA,cAAC,IAAWsI,MAAZ,CACIH,GAAIC,WACJG,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAPZ,SASI,cAAC,IAAOC,QAAR,CAAgB7I,UAAU,iEAE9B,sBAAMA,UAAU,qDAAqD,cAAY,OAAjF,oBAGA,cAAC,IAAWsI,MAAZ,CACIH,GAAIC,WACJG,MAAM,wBACNC,UAAU,uDACVC,QAAQ,yCACRC,MAAM,uBACNC,UAAU,yCACVC,QAAQ,uDAPZ,SASI,sBAAK5I,UAAU,2JAAf,UACA,qBAAKA,UAAU,yCAAf,SACI,qBAAKA,UAAU,GAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,eAAC,IAAO8I,MAAR,CAAcX,GAAG,KAAKnI,UAAU,4DAAhC,8BACkBqE,KAElB,qBAAKrE,UAAU,OAAf,SACA,sBAAMA,UAAU,iBAAhB,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,OAAf,SACI,yBACAwD,GAAG,MACHzB,KAAK,MACLuB,KAAK,OACLG,UAAQ,EACRzD,UAAU,8MACV2D,SAjYvB,SAACd,GAClBrB,QAAQC,IAAIsH,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IAC3CkC,GAAQqD,KAAKC,MAAMnG,EAAMe,OAAOC,OAAOL,IACvCoC,GAASmD,KAAKC,MAAMnG,EAAMe,OAAOC,OAAO9B,OAwXA,UAQI,wBAAQkH,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAhC,2BAEIxE,EAAK/C,KAAI,SAACC,GAAD,OACL,wBAAQgC,MAAOkF,KAAKK,UAAU,CAAC5F,GAAG3B,EAAKkF,OAAQhF,KAAKF,EAAKM,WAAzD,SAAwFN,EAAKM,UAAnBN,EAAKkF,6BAWnH,sBAAK/G,UAAU,2DAAf,UACI,wBACAsD,KAAK,SACLtD,UAAU,gNACVO,QAAS,WAAO+G,GAAY/C,IAH5B,wBAOA,wBACAjB,KAAK,SACLtD,UAAU,2OACVO,QAAS,kBAAM6D,GAAS,IAHxB,uCCnbbqF,MA9Bf,WACE,MAAgC1I,oBAAS,GAAzC,mBAAOX,EAAP,KAAiBsJ,EAAjB,KASA,OACE,qBAAK1J,UAAU,eAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQI,SAAUA,EAAUI,SAVjB,WACfkJ,GAAY,MAUR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,CAAO1G,QAbD,WACdwG,GAAY,QAcN,cAAC,IAAD,CAAOE,KAAK,SAAZ,SACE,cAAC,EAAD,eCvBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.85f0367f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {useHistory} from 'react-router-dom';\n\nconst Header = (props) => {\n\n    const history = useHistory();\n\n    const onLogoutHandle = () => {\n        props.onLogout();\n        localStorage.removeItem(\"token\");\n        history.push('/')\n    };\n\n    return (\n        <header>\n            <div className=\"bg-gray-50 max-w-7xl shadow-md rounded-xl mx-auto px-4 sm:px-6\">\n                <div className=\"flex justify-between items-center py-6 md:space-x-10\">\n                    <Link to=\"/\">\n                        <div className=\"flex items-center transition duration-500 ease-in-out transform hover:scale-110\">\n                            <img className=\"h-8 w-auto mr-2 sm:h-10\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\" alt=\"LilBeasts\" />\n                            <span className=\"text-2xl font-medium text-indigo-600\">Lil's Beasts</span>\n                        </div>\n                    </Link>\n                    {\n                        props.isLogged || localStorage.getItem(\"token\") ? (\n                            <button className=\"transition duration-500 ease-in-out text-lg py-2 px-6 rounded-xl text-white bg-red-600 hover:bg-indigo-600 transform hover:scale-110\" onClick={onLogoutHandle}>Logout</button>\n                        ) : (\n                            <Link to=\"/login\">\n                                <button className=\"transition duration-500 ease-in-out text-lg py-2 px-6 rounded-xl text-white bg-indigo-600 hover:bg-blue-700 transform hover:scale-110\">Staff Login</button>\n                            </Link>\n                        )\n                    }\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import React, {useState, useEffect} from \"react\";\nimport Axios from \"axios\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io.connect('http://localhost:4000');\n\nconst Home = () => {\n\n    const [animals, setAnimals] = useState([]);\n        \n    useEffect(()=>{\n        const fetchData = async () => {\n            const result = await Axios.get(\"http://localhost:4000/api/getAnimals\");\n            console.log(result.data.result);\n            setAnimals(result.data.result);\n        }\n        fetchData();\n    },[setAnimals]);\n\n    useEffect(() => {\n        socket.on(\"changeAnimals\", (data) => {\n          setAnimals(data);\n        });\n      }, []);\n\n    return (\n        <div className=\"text-center mt-6\">\n            <h2 className=\"text-4xl font-medium tracking-wider text-indigo-600\">Welcome to Lil's Beasts Shelter</h2>\n            <p className=\"text-2xl mt-4 tracking-wider text-indigo-600\">These cuties are waiting for you!</p>\n            <div className=\"grid grid-cols-1 gap-6 p-10 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3\">\n                {\n                    animals.map(item => (\n                        <div className=\"transition duration-1000 ease-in-out transform hover:scale-110 p-6 w-11/12 mx-auto bg-white rounded-xl shadow-md space-x-4 flex items-center justify-center\" key={item.animal_id}>\n                            <div>\n                                <img className=\"max-w-md max-h-72 rounded-xl\" src={item.image_url} alt=\"\" />\n                                <div className=\"text-xl font-medium text-blue-600 mt-4\">Meet {item.name}!</div>\n                                <div className=\"mt-4 flex justify-center\">\n                                    <p className=\"mr-4 text-gray-500\">Type: {item.type_name}</p>\n                                    <p className=\"text-gray-500\">Sex: {item.sex}</p>\n                                    <p className=\"ml-4 text-gray-500\">Age: {item.age ? item.age : \"Unknown\"}</p>\n                                </div>\n                                <div className=\"mt-4\">\n                                    <p className=\"text-indigo-600\">Current Vet: {item.vet_name}</p>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React, {useState} from \"react\";\nimport Axios from \"axios\";\nimport {useHistory} from 'react-router-dom';\n\nconst Login = (props) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const history = useHistory();\n\n    const onChangeUsername = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const onChangePassword = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const onSubmitHandler = async(event) => {\n        event.preventDefault();\n        setError(\"\");\n        const result = await Axios.post(\n            \"http://localhost:4000/api/loginStaff\",\n            {\n                user_name: username,\n                password: password\n            }\n        );\n        if(result.status === 204){\n            setError(\"Username and/or password not valid\");\n        } else {\n            props.onLogin();\n            console.log(result.data.token);\n            localStorage.setItem(\"token\", result.data.token);\n            history.push('/admin')\n        }\n    };\n\n    return (\n        <div className=\"flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n                <div>\n                    <img\n                    className=\"mx-auto h-12 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                    />\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-700\">Staff Login</h2>\n                </div>\n                <form className=\"mt-8 space-y-6\" onSubmit={onSubmitHandler}>\n                    <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                    <div className=\"rounded-md shadow-sm\">\n                        <div>\n                            <label className=\"sr-only\">\n                            Username\n                            </label>\n                            <input\n                            id=\"username\"\n                            name=\"username\"\n                            type=\"username\"\n                            required\n                            className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                            placeholder=\"Enter your username\"\n                            onChange={onChangeUsername}\n                            />\n                        </div>\n                        <div className=\"mt-4\">\n                            <label className=\"sr-only\">\n                            Password\n                            </label>\n                            <input\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            required\n                            className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                            placeholder=\"Enter your password\"\n                            onChange={onChangePassword}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <span className=\"text-md text-red-600\">{error}</span>\n                    </div>\n                    <div>\n                        <button\n                            type=\"submit\"\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        >\n                            Login\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","import React, {useState, useEffect, Fragment} from \"react\";\nimport { Dialog, Transition } from '@headlessui/react'\nimport Axios from \"axios\";\nimport {useHistory} from 'react-router-dom';\n\nimport Uppy from '@uppy/core'\nimport Tus from '@uppy/tus'\nimport { DragDrop } from '@uppy/react'\nimport '@uppy/core/dist/style.css'\nimport '@uppy/drag-drop/dist/style.css'\n\nimport io from \"socket.io-client\";\n\nconst socket = io.connect('http://localhost:4000');\n\n\nconst Admin = () => {\n    const [animals, setAnimals] = useState([]);\n    const [success, setSuccess] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const [openV, setOpenV] = useState(false);\n\n    const [selectedName, setSelectedName] = useState(\"\");\n    const [selectedID, setSelectedID] = useState(null);\n\n    const [types, setTypes] = useState([]);\n    const [vets, setVets] = useState([]);\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(null);\n    const [typeN, setTypeN] = useState(\"null\");\n    const [sex, setSex] = useState(\"\");\n    const [age, setAge] = useState(null);\n    const [vet, setVet] = useState(null);\n    const [vetN, setVetN] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\");\n\n    const [vetV, setVetV] = useState(null);\n    const [vetVN, setVetVN] = useState(\"\");\n\n    const[errorForm, setErrorForm] = useState(\"\");\n\n    const history = useHistory();\n    \n    const onNameChange = (event) => {\n        setName(event.target.value);\n    }\n\n    const onTypeChange = (event) => {\n        console.log(JSON.parse(event.target.value).id);\n        setType(JSON.parse(event.target.value).id);\n        setTypeN(JSON.parse(event.target.value).name);\n    }\n\n    const onSexChange = (event) => {\n        setSex(event.target.value);\n    }\n\n    const onAgeChange = (event) => {\n        setAge(event.target.value);\n    }\n\n    const onVetChange = (event) => {\n        console.log(JSON.parse(event.target.value).id);\n        setVet(JSON.parse(event.target.value).id);\n        setVetN(JSON.parse(event.target.value).name);\n    }\n\n    const onVetVChange = (event) => {\n        console.log(JSON.parse(event.target.value).id);\n        setVetV(JSON.parse(event.target.value).id);\n        setVetVN(JSON.parse(event.target.value).name);\n    }\n\n    const onUrlChange = (url) => {\n        console.log(url);\n        setImgUrl(url);\n    }\n\n    const uppy = new Uppy({\n        meta: { type: 'avatar' },\n        restrictions: { maxNumberOfFiles: 1 },\n        autoProceed: true,\n        })\n        \n        uppy.use(Tus, { endpoint: 'https://tusd.tusdemo.net/files/' })\n        \n        uppy.on('complete', (result) => {\n        const url = result.successful[0].uploadURL\n        onUrlChange(url);\n    })\n\n    const onSubmitHandle = async() => {\n        setErrorForm(\"\");\n        if(!name || !type || !sex  || !vet) {\n            setErrorForm(\"Some fields are incomplete. Please verify\")\n        } else if(!imgUrl){\n            setErrorForm(\"Please upload an image\")\n        } else {\n            const authorizationToken = \"Bearer \" + localStorage.getItem(\"token\");\n            console.log(authorizationToken);\n            try {\n                const result = await Axios.post(\n                    \"http://localhost:4000/api/createAnimal\",\n                    {\n                        type_id: type,\n                        name: name,\n                        image_url: imgUrl,\n                        sex: sex,\n                        age: age,\n                        vet_id: vet\n                    },\n                    {\n                        headers: {\n                            authorization: authorizationToken\n                        },\n                    }\n                );\n                if(result.status === 200){\n                    setSuccess(\"Animal added successfully\");\n                    const newArr =[...animals, {\n                        type_id: type,\n                        name: name,\n                        image_url: imgUrl,\n                        sex: sex,\n                        age: age,\n                        vet_id: vet,\n                        type_name: typeN,\n                        vet_name: vetN\n                    }]\n                    setAnimals(newArr);\n                    setOpen(false);\n                    socket.emit(\"changeAnimals\", newArr);\n                } \n            } catch (error) {\n                setError(\"There was an error. Please try again later\")\n                setOpen(false);\n            }\n        }\n    }\n\n    const onOpenVet = async(animal_id, animal_name) => {\n        setSelectedID(animal_id);\n        setSelectedName(animal_name);\n        console.log(animal_id);\n        console.log(animal_name);\n        setOpenV(true);\n    }\n\n    const onChangeVet = async(animal_id) => {\n        setSuccess(\"\");\n        setError(\"\");\n        const authorizationToken = \"Bearer \" + localStorage.getItem(\"token\");\n        try {\n            const result = await Axios.put(\n                \"http://localhost:4000/api/assignVet/\" + animal_id,\n                {\n                    vet_id: vetV\n                },\n                {\n                    headers: {\n                        authorization: authorizationToken\n                    },\n                }\n            );\n            if(result.status === 200){\n                setSuccess(\"Vet assigned successfully\");\n                let newArr = animals;\n                let objIndex = newArr.findIndex((obj => obj.animal_id === animal_id));\n                newArr[objIndex].vet_id = vetV;\n                newArr[objIndex].vet_name = vetVN;\n                setAnimals(newArr);\n                setOpenV(false);\n                socket.emit(\"changeAnimals\", newArr);\n            } \n        } catch (error) {\n            setError(\"There was an error. Please try again later\")\n            setOpenV(false);\n        }\n    }\n\n    const onDeleteHandle = async(animal_id) => {\n        setSuccess(\"\");\n        setError(\"\");\n        const authorizationToken = \"Bearer \" + localStorage.getItem(\"token\");\n        try {\n            const result = await Axios.delete(\n                \"http://localhost:4000/api/deleteAnimal/\" + animal_id,\n                {\n                    headers: {\n                        authorization: authorizationToken\n                    },\n                }\n            );\n            if(result.status === 200){\n                setSuccess(\"Animal deleted successfully\");\n                let newArr = animals.filter(item => item.animal_id !== animal_id)\n                setAnimals(newArr);\n                socket.emit(\"changeAnimals\", newArr);\n            } \n        } catch (error) {\n            setError(error.response.data)\n        }\n    };\n        \n    useEffect(()=>{\n        console.log(localStorage.getItem(\"token\"));\n        if(!localStorage.getItem(\"token\")){\n            console.log(\"UNAUTHORIZED\");\n            history.push('/')\n        }\n        const fetchData = async () => {\n            const result = await Axios.get(\"http://localhost:4000/api/getAnimals\");\n            console.log(result.data.result);\n            setAnimals(result.data.result);\n            const restypes = await Axios.get(\"http://localhost:4000/api/getTypes\");\n            console.log(restypes.data.result);\n            setTypes(restypes.data.result);\n            const resvets = await Axios.get(\"http://localhost:4000/api/getVets\");\n            console.log(resvets.data.result);\n            setVets(resvets.data.result);\n        }\n        fetchData();\n    },[setAnimals, history]);\n\n    return (\n        <div className=\"text-center mt-6\">\n            <h2 className=\"text-4xl font-medium tracking-wider text-indigo-600\">Welcome Staff!</h2>\n            <button className=\"transition duration-500 ease-in-out text-lg py-2 px-6 rounded-xl text-white bg-blue-600 hover:bg-pink-700 transform hover:scale-110 mt-6\" onClick={() => {setOpen(true)}}>Add animal</button>\n\n            <Transition.Root show={open} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                    </Transition.Child>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                        &#8203;\n                    </span>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    >\n                        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                        <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                            <div className=\"\">\n                                <div className=\"mt-3 sm:mt-0 sm:ml-4\">\n                                    <Dialog.Title as=\"h3\" className=\"text-xl text-center leading-6 font-medium text-indigo-900\">\n                                    Add an animal\n                                    </Dialog.Title>\n                                    <div className=\"mt-2\">\n                                    <form className=\"mt-8 space-y-6\">\n                                        <div className=\"rounded-md shadow-sm\">\n                                            <div>\n                                                <input\n                                                id=\"name\"\n                                                name=\"name\"\n                                                type=\"text\"\n                                                required\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                placeholder=\"Animal Name\"\n                                                onChange={onNameChange}\n                                                />\n                                            </div>\n                                            <div className=\"mt-4\">\n                                                <select\n                                                id=\"type\"\n                                                name=\"type\"\n                                                type=\"text\"\n                                                required\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                onChange={onTypeChange}\n                                                >\n                                                    <option selected disabled hidden>Select animal type:</option>\n                                                    {\n                                                        types.map((item) => (\n                                                            <option value={JSON.stringify({id:item.type_id, name:item.type_name})} key={item.type_id}>{item.type_name}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </div>\n                                            <div className=\"mt-4\">\n                                                <select\n                                                id=\"sex\"\n                                                name=\"sex\"\n                                                type=\"text\"\n                                                required\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                onChange={onSexChange}\n                                                >\n                                                    <option selected disabled hidden>Select animal sex:</option>\n                                                    <option>Male</option>\n                                                    <option>Female</option>\n                                                </select>\n                                            </div>\n                                            \n                                            <div className=\"mt-4\">\n                                                <input\n                                                id=\"age\"\n                                                name=\"age\"\n                                                type=\"number\"\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                placeholder=\"Enter animal age if known\"\n                                                onChange={onAgeChange}\n                                                />\n                                            </div>\n                                            <div className=\"mt-4\">\n                                                <select\n                                                id=\"vet\"\n                                                name=\"vet\"\n                                                type=\"text\"\n                                                required\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                onChange={onVetChange}\n                                                >\n                                                    <option selected disabled hidden>Assign a vet:</option>\n                                                    {\n                                                        vets.map((item) => (\n                                                            <option value={JSON.stringify({id:item.vet_id, name:item.vet_name})} key={item.vet_id}>{item.vet_name}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div className=\"text-md text-gray-500 text-center\">Upload a photo of the animal</div>\n                                            {imgUrl  && <img className=\"rounded-xl my-4\" src={imgUrl} alt=\"Current Avatar\" />}\n                                            <DragDrop\n                                                uppy={uppy}\n                                                locale={{\n                                                strings: {\n                                                    dropHereOr: 'Drop here or %{browse}',\n                                                    browse: 'browse',\n                                                },\n                                                }}\n                                            />\n                                        </div>\n                                        <div>\n                                            <span className=\"text-md text-red-600\">{errorForm}</span>\n                                        </div>\n                                    </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                            <button\n                            type=\"button\"\n                            className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={onSubmitHandle}\n                            >\n                            Add animal\n                            </button>\n                            <button\n                            type=\"button\"\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={() => setOpen(false)}\n                            >\n                            Cancel\n                            </button>\n                        </div>\n                        </div>\n                    </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n\n            <div>\n                <span className=\"text-xs text-green-500\">{success}</span>\n            </div>\n            <div>\n                <span className=\"text-xs text-red-500\">{error}</span>\n            </div>\n            <div className=\"grid grid-cols-1 gap-6 p-10 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3\">\n                {\n                    animals.map(item => (\n                        <div className=\"transition duration-1000 ease-in-out transform hover:scale-110 p-6 w-11/12 mx-auto bg-white rounded-xl shadow-md space-x-4 flex items-center justify-center\" key={item.animal_id}>\n                            <div>\n                                <img className=\"max-w-md max-h-72 rounded-xl\" src={item.image_url} alt=\"\" />\n                                <div className=\"text-xl font-medium text-blue-600 mt-4\">Meet {item.name}!</div>\n                                <div className=\"mt-4 flex justify-center\">\n                                    <p className=\"mr-4 text-gray-500\">Type: {item.type_name}</p>\n                                    <p className=\"text-gray-500\">Sex: {item.sex}</p>\n                                    <p className=\"ml-4 text-gray-500\">Age: {item.age ? item.age : \"Unknown\"}</p>\n                                </div>\n                                <div className=\"mt-4\">\n                                    <p className=\"text-indigo-600\">Current Vet: {item.vet_name}</p>\n                                </div>\n                                <div>\n                                    <button className=\"transition duration-500 ease-in-out text-lg py-2 px-6 rounded-xl text-white bg-indigo-600 hover:bg-blue-600 transform hover:scale-110 mt-6 mr-4\" onClick={() => {onOpenVet(item.animal_id, item.name)}}>Change Vet</button>\n                                    <button className=\"transition duration-500 ease-in-out text-lg py-2 px-6 rounded-xl text-white bg-red-600 hover:bg-red-900 transform hover:scale-110 mt-6 ml-4\" onClick={() => {onDeleteHandle(item.animal_id)}}>Delete animal</button>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n            <Transition.Root show={openV} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpenV}>\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                    </Transition.Child>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                        &#8203;\n                    </span>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    >\n                        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                        <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                            <div className=\"\">\n                                <div className=\"mt-3 sm:mt-0 sm:ml-4\">\n                                    <Dialog.Title as=\"h3\" className=\"text-xl text-center leading-6 font-medium text-indigo-900\">\n                                    Assign a Vet for {selectedName}\n                                    </Dialog.Title>\n                                    <div className=\"mt-2\">\n                                    <form className=\"mt-8 space-y-6\">\n                                        <div className=\"rounded-md shadow-sm\">                                            \n                                            <div className=\"mt-4\">\n                                                <select\n                                                id=\"vet\"\n                                                name=\"vet\"\n                                                type=\"text\"\n                                                required\n                                                className=\"appearance-none rounded-xl relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                                onChange={onVetVChange}\n                                                >\n                                                    <option selected disabled hidden>Assign a vet:</option>\n                                                    {\n                                                        vets.map((item) => (\n                                                            <option value={JSON.stringify({id:item.vet_id, name:item.vet_name})} key={item.vet_id}>{item.vet_name}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                            <button\n                            type=\"button\"\n                            className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={() => {onChangeVet(selectedID)}}\n                            >\n                            Assign Vet\n                            </button>\n                            <button\n                            type=\"button\"\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={() => setOpenV(false)}\n                            >\n                            Cancel\n                            </button>\n                        </div>\n                        </div>\n                    </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n        </div>\n    )\n}\n\nexport default Admin","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport React, {useState} from \"react\";\n\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Admin from './components/Admin'\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(false);\n\n  const onLogout = () =>{\n    setIsLogged(false);\n  }\n  const onLogin = () =>{\n    setIsLogged(true);\n  }\n\n  return (\n    <div className=\"App h-screen\">\n      <Router>\n        <Header isLogged={isLogged} onLogout={onLogout} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login onLogin={onLogin}/>\n          </Route>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}